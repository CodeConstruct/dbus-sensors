From 8196f25a4fef17d5d104bb529ffec7b0881a1225 Mon Sep 17 00:00:00 2001
From: Hao Jiang <jianghao@google.com>
Date: Mon, 5 Dec 2022 16:48:35 -0800
Subject: [PATCH 2/4] mi: fix the return error code.

When returning a system error code (i.e. rc < 0), the function should
return -1 and set errno instead of returning the errno directly. It is
very helpful for the client to handle the rc in an unified way.

Signed-off-by: Hao Jiang <jianghao@google.com>

Patch Tracking Bug: b/274912870
Upstream info / review: https://github.com/linux-nvme/libnvme/pull/549
Upstream-Status: Submitted
Justification: Improve the return code handling
---
 src/nvme/mi.c | 55 ++++++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 44 insertions(+), 11 deletions(-)

diff --git a/src/nvme/mi.c b/src/nvme/mi.c
index 693bbb4..c33a2d3 100644
--- a/src/nvme/mi.c
+++ b/src/nvme/mi.c
@@ -1055,7 +1055,10 @@ int nvme_mi_admin_get_features(nvme_mi_ctrl_t ctrl,
 	int rc;
 
 	if (args->args_size < sizeof(*args))
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	nvme_mi_admin_init_req(&req, &req_hdr, ctrl->id,
 			       nvme_admin_get_features);
@@ -1094,7 +1097,10 @@ int nvme_mi_admin_set_features(nvme_mi_ctrl_t ctrl,
 	int rc;
 
 	if (args->args_size < sizeof(*args))
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	nvme_mi_admin_init_req(&req, &req_hdr, ctrl->id,
 			       nvme_admin_set_features);
@@ -1138,7 +1144,10 @@ int nvme_mi_admin_ns_mgmt(nvme_mi_ctrl_t ctrl,
 	int rc;
 
 	if (args->args_size < sizeof(*args))
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	nvme_mi_admin_init_req(&req, &req_hdr, ctrl->id,
 			       nvme_admin_ns_mgmt);
@@ -1174,7 +1183,10 @@ int nvme_mi_admin_ns_attach(nvme_mi_ctrl_t ctrl,
 	int rc;
 
 	if (args->args_size < sizeof(*args))
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	nvme_mi_admin_init_req(&req, &req_hdr, ctrl->id,
 			       nvme_admin_ns_attach);
@@ -1207,16 +1219,28 @@ int nvme_mi_admin_fw_download(nvme_mi_ctrl_t ctrl,
 	int rc;
 
 	if (args->args_size < sizeof(*args))
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	if (args->data_len & 0x3)
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	if (args->offset & 0x3)
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	if (!args->data_len)
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	nvme_mi_admin_init_req(&req, &req_hdr, ctrl->id,
 			       nvme_admin_fw_download);
@@ -1249,7 +1273,10 @@ int nvme_mi_admin_fw_commit(nvme_mi_ctrl_t ctrl,
 	int rc;
 
 	if (args->args_size < sizeof(*args))
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	nvme_mi_admin_init_req(&req, &req_hdr, ctrl->id,
 			       nvme_admin_fw_commit);
@@ -1279,7 +1306,10 @@ int nvme_mi_admin_format_nvm(nvme_mi_ctrl_t ctrl,
 	int rc;
 
 	if (args->args_size < sizeof(*args))
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	nvme_mi_admin_init_req(&req, &req_hdr, ctrl->id,
 			       nvme_admin_format_nvm);
@@ -1313,7 +1343,10 @@ int nvme_mi_admin_sanitize_nvm(nvme_mi_ctrl_t ctrl,
 	int rc;
 
 	if (args->args_size < sizeof(*args))
-		return -EINVAL;
+	{
+		errno = EINVAL;
+		return -1;
+	}
 
 	nvme_mi_admin_init_req(&req, &req_hdr, ctrl->id,
 			       nvme_admin_sanitize_nvm);
-- 
2.39.0.314.g84b9a713c41-goog

